// –ß—Ç–æ –∂, –¥–∞–≤–∞–π—Ç–µ —Å –≤–∞–º–∏ —Ä–µ—à–∏–º –∑–∞–¥–∞—á–∫—É –∏ –≤–µ—Ä–Ω–µ–º—Å—è –∫ —Ç–µ–º–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –≤–∞–ª—è—Ç—Å—è –≤—Å–µ —Ä–∞–≤–Ω–æ –º–Ω–æ–≥–∏–µ ‚òïÔ∏è

// –ù–µ, —Å–µ—Ä—å–µ–∑–Ω–æ, –µ—Å–ª–∏ –≤—ã –Ω–æ–≤–∏—á–æ–∫ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ—à–∏—Ç—å, –≤–µ–¥—å —ç—Ç–∞ –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤–∞—à–∏–º –æ–ø—ã—Ç–æ–º. –ê –µ—Å–ª–∏ –≤–µ—Ç–µ—Ä–∞–Ω - —Ç–æ –±—ã—Å—Ç—Ä–æ –ø–æ–Ω—è—Ç—å –Ω–∞ —á—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞. –û—Ç–≤–µ—Ç –≤—ã–ª–æ–∂—É –∑–∞–≤—Ç—Ä–∞, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–∑—É —Å–ø–æ–π–ª–µ—Ä–∏—Ç—å

// –£—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏:

// üí° –£ –≤–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∏–Ω–≤–µ–Ω—Ç–æ—Ä—è. –ú–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ —ç—Ç–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤ –≤–∞—à–µ–π –ª—é–±–∏–º–æ–π –∏–≥—Ä–µ

// ‚ûï –õ—é–±–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ –µ—â–µ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç, –≥–¥–µ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å —Ä–∞–∑–Ω–∏—Ü—É. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ —Å—É–Ω–¥—É–∫ –∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–±—Ä–∞—Ç—å –≤—Å–µ"

// ‚ûï –ï—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ - –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞–∫–æ–π –ø—É–Ω–∫—Ç –≤ –æ–±—ä–µ–∫—Ç

// ‚úèÔ∏è –ë—ã–≤–∞–µ—Ç —Ç–∞–∫, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –æ—Ç–¥–∞—Ç—å –≤–µ—â–∏ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–æ—Ä—è. –¢–æ–≥–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –ù–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –º–æ–∂–µ—Ç —Ç–∞–∫–∏–º –±—ã—Ç—å, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ - –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é (—Å–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä)

const inventory = {
    wood: 10,
    steel: 5,
    coal: 8,
  };
  
  const update = {
    wood: 3, // –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ 3
    steel: -5, // –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ 5
    copper: 4, // –î–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ
  };
  
  const updatedInventory = function (inventory, update) {
    const cloneInventory = { ...inventory }
    const cloneUpdate = { ...update }

    const newObj = {}
    for (const i in cloneInventory) {
        for (const j in cloneUpdate) {
            if (i === j) {
                newObj[i] = Number(cloneInventory[i]) + Number(cloneUpdate[j]);
                delete cloneInventory[i]
                delete cloneUpdate[j];
                if (newObj[i] < 0) {
                    throw Error('–û—à–∏–±–∫–∞: –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')
                }
            }
        }
    }
    const result = {...newObj, ...cloneInventory, ...cloneUpdate };

    console.log('result: ', result);
  };
  
    updatedInventory(inventory, update);
    // –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: { wood: 13, steel: 0, coal: 8, copper: 4 }
  
  const updateWithError = {
    steel: -10, // –û—à–∏–±–∫–∞: –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
  };
  
  updatedInventory(inventory, updateWithError); // –î–æ–ª–∂–Ω–æ –≤—ã–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É
  